(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{100:function(e,t,a){"use strict";a.r(t);var l=a(0),n=a.n(l),s=a(28),o=a.n(s),r=a(5),i=a(6),c=a(8),m=a(7),d=a(9),u=a(18),h=a(16),v=a(102),b=function(e){function t(){return Object(r.a)(this,t),Object(c.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return n.a.createElement("div",null,"Convnet Playground is a research prototype by Clouderaa Fast Forward Labs, built to accompany our updated report on Image Analysis. More about this report is described in our blog post.",n.a.createElement("div",{className:"horrule mb10 pt10"}),"Convolutional Neural Networks (Convnets or CNNs) are deep neural networks that can learn hierarchical representations useful for image analysis. Early layers in a CNN learn low level features (e.g. lines, edges, shapes, colours) while later layers learn high level concepts (e.g eyes, legs, faces, doors etc) depending on the dataset used for training. In Convnet Playground, features extracted using layers from a CNN are used for semantic search (image retrieval based on similarity of extracted features).",n.a.createElement("div",{className:"horrule mb10 pt10"}),n.a.createElement("div",{className:"boldtext"}," Semantic Search "),"This section of the prototype allows you explore similarity rankings from various layers of a trained CNN. The user can select a configuration (dataset, model, layer, distance metric) and then view how these result in different image similarity rankings.",n.a.createElement("br",null),n.a.createElement("div",{className:"boldtext mt10"}," Models Explorer"),"This section enables the user to view visualizations of select layers and neurons within a model. This can help provide intuition on how/why CNNs are effective for image analysis tasks such as image classification object detection, image segmentation etc.",n.a.createElement("br",null))}}]),t}(l.Component),p=(a(54),a(15)),y=(a(55),a(29)),g=a.n(y),f=a(43),k=a.n(f),E=function(e){function t(){return Object(r.a)(this,t),Object(c.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return n.a.createElement("div",null,n.a.createElement(p.Header,{"aria-label":"Convolutional Neural Network Playground"},n.a.createElement(p.SkipToContent,null),n.a.createElement(p.HeaderName,{href:"/",prefix:""},"ConvNet Playground"),n.a.createElement(p.HeaderNavigation,{"aria-label":"Convolutional Neural Network Playground"},n.a.createElement("div",{className:"navbarlinks  "},n.a.createElement(u.b,{exact:!0,to:"/"}," Semantic Search ")),n.a.createElement("div",{className:"navbarlinks "},n.a.createElement(u.b,{to:"/models"}," Model Explorer ")),n.a.createElement("div",{className:"navbarlinks "},n.a.createElement(u.b,{to:"/extra"}," Extras "))),n.a.createElement(p.HeaderGlobalBar,null,n.a.createElement(p.HeaderGlobalAction,{"aria-label":"Notifications"},n.a.createElement(g.a,null)),n.a.createElement(p.HeaderGlobalAction,{"aria-label":"App Switcher"},n.a.createElement(k.a,null)))),n.a.createElement("div",null," ",n.a.createElement("br",null)," ",n.a.createElement("br",null),"  ",n.a.createElement("br",null),"  ",n.a.createElement("br",null)," "))}}]),t}(l.Component),x=function(e){function t(){return Object(r.a)(this,t),Object(c.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return n.a.createElement("div",null,"Made with ",n.a.createElement("span",{className:"redcolor"},"\u2665")," at ",n.a.createElement("a",{href:"http://experiments.fastforwardlabs.com/",target:"blank"},"Cloudera Fast Forward Labs"),".")}}]),t}(l.Component),N=(a(88),function(e){function t(){return Object(r.a)(this,t),Object(c.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return n.a.createElement("div",null,n.a.createElement("div",{className:"horrule mb10 pt10"}),n.a.createElement("div",{className:"boldtext"}," Datasets "),"[TinyImagenet] This dataset contains 64px * 64px images and is a subset of the Tiny Imagenet Visual Recognition Challenge dataset. It consists of images from 10 categories (faces, shoes, teapots, goldfish, frogs, ..)",n.a.createElement("br",null),"[Iconic3k] This is a dataset collected from Flickr images (open attribution) of real world iconic images taken by users. It contains images spanning 10 keyword searches (toyota corolla, volkswagen beetle, honda civic, tractors, bananna, pineapples, ..)",n.a.createElement("div",{className:"boldtext mt10"}," Models and Layers"),"We provide 10 models and a selection of layers from each model. These include VGG16, ResNet50, .. .",n.a.createElement("br",null)," Click on a model or layer to select it and layer to display additional information.",n.a.createElement("div",{className:"boldtext mt10"}," Distance Metric "),"Once we extract vector representation of our image using layers from a model, how do we measure how similar each vector is to the other? Several distance metrics are offered (cosine, hamming, euclidean, jaccard, minkowski).",n.a.createElement("br",null)," Hint: Cosine works best.")}}]),t}(l.Component));function _(e,t){return e.length<=t?e:e.substring(0,t)+" .."}function w(e){return(new Intl.NumberFormat).format(Math.round(10*e)/10)}function C(e){return e<1&&e>0?e:Math.abs(e)>=1e6?w(e/1e6)+"M":Math.abs(e)>=1e3?w(e/1e3)+"k":w(e)}var L=function(e){function t(e){var l;Object(r.a)(this,t),l=Object(c.a)(this,Object(m.a)(t).call(this,e));var n=a(89),s=(n.datasets[0].name,n.models[0].name,n.metrics[0],n.models[0].layers[0],a(90));return l.state={selecteddataset:0,selectedmodel:0,selectedsimimage:0,selectedlayer:0,selectedmetric:0,similarityArray:s,datasetsList:n.datasets,modelsList:n.models,distanceMetricList:n.metrics,showorientationmodal:!1,topx:5},l.updateSimilarity(),l}return Object(d.a)(t,e),Object(i.a)(t,[{key:"componentDidMount",value:function(){document.title="ConvNet Playground | Semantic Search Explorer"}},{key:"componentDidUpdate",value:function(e,t){this.state.selectedmodel===t.selectedmodel&&this.state.selectedmetric===t.selectedmetric&&this.state.selectedlayer===t.selectedlayer&&this.state.selecteddataset===t.selecteddataset||this.updateSimilarity()}},{key:"clickDatasetImage",value:function(e){this.setState({selecteddataset:e.target.getAttribute("indexvalue")}),this.setState({selectedmodel:0})}},{key:"clickModelImage",value:function(e){this.setState({selectedmodel:e.target.getAttribute("indexvalue")}),this.setState({selectedlayer:0})}},{key:"clickLayerImage",value:function(e){this.setState({selectedlayer:e.target.getAttribute("indexvalue")})}},{key:"clickMetricImage",value:function(e){this.setState({selectedmetric:e.target.getAttribute("indexvalue")})}},{key:"clickSimilarImage",value:function(e){this.setState({selectedsimimage:e.target.getAttribute("indexvalue")})}},{key:"toggleSemanticModal",value:function(e){this.setState({showorientationmodal:!this.state.showorientationmodal})}},{key:"updateSimilarity",value:function(){var e="/convnetplayground/assets/semsearch/similarity/"+this.state.datasetsList[this.state.selecteddataset].name+"/"+this.state.modelsList[this.state.selectedmodel].name+"/"+this.state.distanceMetricList[this.state.selectedmetric]+"/"+this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].name+".json",t=fetch(e).then(function(e){if(200===e.status)return e.json().then(function(e){return e});console.log("Looks like there was a problem. Status Code: "+e.status)}).catch(function(e){console.log("Fetch Error :-S",e)}),a=this;t.then(function(e){e&&a.setState({similarityArray:e})})}},{key:"render",value:function(){var e=this,t=this.state.datasetsList.map(function(t,a){var l="/convnetplayground/assets/semsearch/images/"+t.icon;return n.a.createElement("div",{key:t.name+"fullbox"+a,className:"iblock datasetfullbox clickable mb10"},n.a.createElement("div",{className:"datasettitles"}," ",t.name.toUpperCase()),n.a.createElement("img",{onClick:e.clickDatasetImage.bind(e),src:l,alt:"",className:"datasetbox rad2 "+(e.state.selecteddataset==a?"active":""),indexvalue:a}))}),l=this.state.modelsList.map(function(t,l){return n.a.createElement("div",{key:t.name+"fullbox"+l,className:"iblock datasetfullbox clickable mb10 "},n.a.createElement("div",{className:"datasettitles"}," ",t.name.toUpperCase()),n.a.createElement("img",{onClick:e.clickModelImage.bind(e),src:a(39),alt:"",className:"datasetbox rad2 "+(e.state.selectedmodel==l?"active":""),indexvalue:l}))}),s=this.state.modelsList[this.state.selectedmodel].layers.map(function(t,l){return n.a.createElement("div",{key:t+"fullbox"+l,className:"iblock datasetfullbox clickable mb10 "},n.a.createElement("div",{className:"datasettitles"}," ",_(t.name,11).toLowerCase()),n.a.createElement("img",{onClick:e.clickLayerImage.bind(e),src:a(26),alt:"",className:"datasetbox rad2 "+(e.state.selectedlayer==l?"active":""),indexvalue:l}))}),o=this.state.distanceMetricList.map(function(t,l){return n.a.createElement("div",{key:t+"fullbox"+l,className:"iblock datasetfullbox clickable mb10 "},n.a.createElement("div",{className:"datasettitles"}," ",_(t,11).toLowerCase()),n.a.createElement("img",{onClick:e.clickMetricImage.bind(e),src:a(26),alt:"",className:"datasetbox rad2 "+(e.state.selectedmetric==l?"active":""),indexvalue:l}))}),r=this.state.similarityArray[this.state.selectedsimimage].map(function(t,a){var l,s="/convnetplayground/assets/semsearch/datasets/"+e.state.datasetsList[e.state.selecteddataset].name+"/"+t[0]+".jpg",o=(1*t[1]).toFixed(3),r=a==e.state.topx,i=n.a.createElement("div",{key:t[0]+"winper",className:"iblock similarityfullbox mr5 mb5 positionrelative"},n.a.createElement("img",{key:t[0]+"image"+t[0],onClick:e.clickSimilarImage.bind(e),src:s,alt:"",className:"simiimage clickable rad2 ",indexvalue:t[0]}),n.a.createElement("div",{className:"outersimbar"},n.a.createElement("div",{className:"innersimbar",style:{width:100*(l=o,l<0?0:l>1?1:l)+"%"}})),n.a.createElement("div",{className:"similarityscorebox"},C(o)," "));return r?n.a.createElement("div",{className:""}):i}),i="/convnetplayground/assets/semsearch/datasets/"+this.state.datasetsList[this.state.selecteddataset].name+"/"+this.state.selectedsimimage+".jpg";return n.a.createElement("div",null,this.state.showorientationmodal&&n.a.createElement(v.a,{className:"orientationmodal",open:!0,size:"lg",passiveModal:!0,primaryButtonText:"Get Started",modalHeading:"Semantic Search",modalLabel:"How this demo works",onRequestSubmit:this.toggleSemanticModal.bind(this),ref:function(t){return e.orientationModal=t},onRequestClose:this.toggleSemanticModal.bind(this)},n.a.createElement(N,null)),n.a.createElement("div",{className:" flex  "},n.a.createElement("div",{className:"iblock sectiontitle flexfull   pt4 "},"What is Semantic Search?"),n.a.createElement("div",{className:"flex5  "},n.a.createElement("div",{onClick:this.toggleSemanticModal.bind(this),className:"iblock floatright  clickable showmodal"}," ? More Info  "))),n.a.createElement("div",{className:"horrule"}),n.a.createElement("div",{className:"flex mt10"},n.a.createElement("div",{className:"flex5 mr10 mynotif lightbluehightlight p20"},n.a.createElement("div",{className:"boldtext mb10"}," Semantic Search"),n.a.createElement("div",{className:"lh10"},'Layers in a trained convolutional neural network (CNN) can be used to extract features from images.\n        Semantic search explores the use these extracted features in computing the "similarity" between images.  ')),n.a.createElement("div",{className:"flex5  mynotif lightbluehightlight p20"},n.a.createElement("div",{className:"boldtext mb10"}," Model architectures and Layers"),n.a.createElement("div",{className:"lh10"},"How do features extracted using different model architectures compare? What layers perform better and when?\n        What similarity distance metrics work best? This demo helps you investigate these questions!"))),n.a.createElement("div",{className:"flex flexwrap"},n.a.createElement("div",{className:"flex2 mr10"},n.a.createElement("div",{className:"mt20 pb10 sectiontitle"}," Select Dataset "),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",{className:"datasetselectdiv"},t),n.a.createElement("div",{className:" iblock boldtext  iblock boldtext datasetdescription  p10 lightbluehightlight"},this.state.datasetsList[this.state.selecteddataset].name.toUpperCase())),n.a.createElement("div",{className:"flex3 mr10"},n.a.createElement("div",{className:"mt20 pb10 sectiontitle"}," Select Model "),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",{className:"datasetselectdiv"},l),n.a.createElement("div",{className:" iblock boldtext datasetdescription  p10 lightbluehightlight"},this.state.modelsList[this.state.selectedmodel].name.toUpperCase())),n.a.createElement("div",{className:"flex3"},n.a.createElement("div",{className:"mt20 pb10 sectiontitle"}," Select Layer "),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",{className:"scrollwindow  "},n.a.createElement("div",{className:"windowcontent"}," ",s," ")),n.a.createElement("div",{className:"flex flexwrap "},n.a.createElement("div",{className:"flex1  mr10 "},n.a.createElement("div",{className:" iblock boldtext datasetdescription  p10 lightbluehightlight"}," ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].name.toUpperCase())),n.a.createElement("div",{className:"flex9 "},n.a.createElement("div",{className:"smalldesc boldtext pt4"}," Layer [ ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].layer_index,"  of ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].totallayers,"  ] ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].type," "),n.a.createElement("div",{className:"smalldesc pt3"}," ",C(this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].parametercount)," trainable parameters ")))),n.a.createElement("div",{className:"flex2"},n.a.createElement("div",{className:"mt20 pb10 sectiontitle"}," Distance Metric "),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",{className:"scrollwindow  "},n.a.createElement("div",{className:"windowcontent"}," ",o," ")),n.a.createElement("div",{className:" iblock boldtext datasetdescription  p10 lightbluehightlight"}," ",this.state.distanceMetricList[this.state.selectedmetric].toUpperCase()))),n.a.createElement("div",{className:"mt20 mb10 "},n.a.createElement("div",{className:"sectiontitle iblock mr10"}," Similarity search "),n.a.createElement("div",{className:"iblock"}," Select an image to view most similar based on model output.")),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",{className:"flex"},n.a.createElement("div",{className:"iblock  flex1 mr10"},n.a.createElement("img",{src:i,className:"mainsimilarityimage rad4  iblock",alt:""}),n.a.createElement("div",{className:" mt10  boldtext datasetdescription  p10 lightbluehightlight"}," SEARCH IMAGE ")),n.a.createElement("div",{className:" flexfull"},n.a.createElement("div",{className:"mb10 mainsimilaritydesc lightbluehightlight p10"},"Based on features extracted using ",n.a.createElement("span",{className:"boldtext"}," ",this.state.modelsList[this.state.selectedmodel].name.toUpperCase()," "),", layer ",n.a.createElement("span",{className:"boldtext"}," ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].name.toUpperCase()," "),"and  ",n.a.createElement("span",{className:" boldtext"}," COSINE ")," distance metric, the  images below are ranked from most similar to least similar."),n.a.createElement("div",null,r))),n.a.createElement("br",null),n.a.createElement("br",null),n.a.createElement("br",null))}}]),t}(l.Component),S=(a(95),function(e){function t(e){var l;Object(r.a)(this,t),l=Object(c.a)(this,Object(m.a)(t).call(this,e));var n=a(96),s=a(97);return l.state={selectedmodel:0,selectedlayer:0,selectedneuron:0,modelsList:s.models,layersList:n[s.models[0].name],neuronList:[],showmodelmodal:!1},l.layerList=n,l.pageIntro=" Convolutional Neural Network models are comprised of layers which learn heirarchical \n        representations. What kind of representations or features does each layer learn? \n        Well, let us explore the following models. ",l}return Object(d.a)(t,e),Object(i.a)(t,[{key:"componentDidMount",value:function(){document.title="ConvNet Playground | Model Explorer"}},{key:"clickModelImage",value:function(e){this.setState({selectedmodel:e.target.getAttribute("indexvalue")}),this.setState({selectedlayer:0})}},{key:"clickLayerImage",value:function(e){this.setState({selectedlayer:e.target.getAttribute("indexvalue")}),this.setState({selectedneuron:0})}},{key:"clickNeuronImage",value:function(e){this.setState({selectedneuron:e.target.getAttribute("indexvalue")})}},{key:"toggleModelsModal",value:function(e){this.setState({showmodelmodal:!this.state.showmodelmodal})}},{key:"render",value:function(){var e,t=this,l=this.state.modelsList.map(function(e,l){return n.a.createElement("div",{key:e.name+"fullbox"+l,className:"iblock datasetfullbox clickable mb10 "},n.a.createElement("div",{className:"datasettitles"}," ",e.name.toUpperCase()),n.a.createElement("img",{onClick:t.clickModelImage.bind(t),src:a(39),alt:"",className:"datasetbox rad2 "+(t.state.selectedmodel==l?"active":""),indexvalue:l}))}),s=this.state.modelsList[this.state.selectedmodel].layers.map(function(e,l){return n.a.createElement("div",{key:e+"fullbox"+l,className:"iblock datasetfullbox clickable mb10 "},n.a.createElement("div",{className:"datasettitles"}," ",_(e.name,11).toLowerCase()),n.a.createElement("img",{onClick:t.clickLayerImage.bind(t),src:a(26),alt:"",className:"datasetbox rad2 "+(t.state.selectedlayer==l?"active":""),indexvalue:l}))}),o=this.state.modelsList[this.state.selectedmodel].name,r=this.layerList[o],i=this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].name,c=r[i];return this.state.neuronList=c,c&&(e=r[i].map(function(e,a){var l="/convnetplayground/assets/models/"+o+"/"+i+"/"+e+".jpg",s=e.split(".")[0];return n.a.createElement("div",{key:e+"fullbox"+a,className:"iblock datasetfullbox clickable mb10 "},n.a.createElement("div",{className:"datasettitles"}," Neuron ",s),n.a.createElement("img",{onClick:t.clickNeuronImage.bind(t),src:l,alt:"",className:"neuronbox rad2 "+(t.state.selectedneuron==a?"active":""),indexvalue:a,pathinfo:l,neuronindex:s}))})),n.a.createElement("div",null,n.a.createElement("div",{className:" flex  "},n.a.createElement("div",{className:"iblock sectiontitle flexfull   pt4 "},"Model Explorer"),n.a.createElement("div",{className:"flex5  "},n.a.createElement("div",{onClick:this.toggleModelsModal.bind(this),className:"iblock floatright  clickable showmodal"}," ? More Info  "))),n.a.createElement("div",{className:"horrule"}),n.a.createElement("div",{className:"flex mt10"},n.a.createElement("div",{className:"flex5 mr10 mynotif lightbluehightlight p20"},n.a.createElement("div",{className:"boldtext mb10"}," Model Interpretability"),n.a.createElement("div",{className:"lh10"},'Interpretable models are models we can "understand". \n        Interpretability explores approaches to better understand neural networks. For example, \n        how can we "peek" into a CNN to get an idea of what each neuron in a layer has learned to detect? ')),n.a.createElement("div",{className:"flex5  mynotif lightbluehightlight p20"},n.a.createElement("div",{className:"boldtext mb10"}," Optimization-based Feature Visualization"),n.a.createElement("div",{className:"lh10"},"  \n        One way to accomplish this is the use of optimization approaches to feature visualizations. Within this approach,\n        we begin with random noise and update it (based on gradients) to maximally excite each neuron. \n        We use the lucid library to accomplish this and results are shown for a few models below.\n        "))),n.a.createElement("div",{className:"flex flexwrap"},n.a.createElement("div",{className:"flex5 mr10"},n.a.createElement("div",{className:"mt20 pb10 sectiontitle"}," Select Model "),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",{className:"datasetselectdiv"},l),n.a.createElement("div",{className:" iblock boldtext datasetdescription  p10 lightbluehightlight"},this.state.modelsList[this.state.selectedmodel].name.toUpperCase())),n.a.createElement("div",{className:"flex5"},n.a.createElement("div",{className:"mt20 pb10 sectiontitle"}," Select Layer "),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",{className:"scrollwindow  "},n.a.createElement("div",{className:"windowcontent"}," ",s," ")),n.a.createElement("div",{className:"flex flexwrap "},n.a.createElement("div",{className:"flex1  mr10 "},n.a.createElement("div",{className:" iblock boldtext datasetdescription  p10 lightbluehightlight"}," ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].name.toUpperCase())),n.a.createElement("div",{className:"flex9 "},n.a.createElement("div",{className:"smalldesc boldtext pt4"}," Layer [ ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].layer_index,"  of ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].totallayers,"  ] ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].type," "),n.a.createElement("div",{className:"smalldesc pt3"}," ",C(this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].parametercount)," trainable parameters "))))),n.a.createElement("div",{className:"mt20 mb10 "},n.a.createElement("div",{className:"sectiontitle iblock mr10"}," Neurons in ",this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].name.toUpperCase()," Layer "),n.a.createElement("div",{className:"iblock"}," A selection of 30 neurons on the current layer.")),n.a.createElement("div",{className:"horrule mb10"}),n.a.createElement("div",null,e),n.a.createElement("div",{className:"enlargeddiv rad2"},n.a.createElement("img",{className:"enlargedneuron rad4",src:"/convnetplayground/assets/models/"+o+"/"+i+"/"+this.state.neuronList[this.state.selectedneuron]+".jpg",alt:""}),n.a.createElement("div",{className:"boldtext enlargeddesc mt10 p10 lightbluehightlight"},this.state.modelsList[this.state.selectedmodel].layers[this.state.selectedlayer].name.toUpperCase(),": ",this.state.neuronList[this.state.selectedneuron].split(".")[0]," ")),n.a.createElement("br",null),n.a.createElement("br",null),n.a.createElement("br",null))}}]),t}(l.Component)),D=a(104),j=(a(98),function(e){function t(e){var a;return Object(r.a)(this,t),(a=Object(c.a)(this,Object(m.a)(t).call(this,e))).datasetslist=[{name:"CIFAR100x",css:"active",index:[0]},{name:"ICONIC3K",css:""},{name:"IMAGENET3K",css:""}],a.state={selecteddataset:a.datasetslist[0]},a.algebraIntro=' With Image Algebra, we take advantage of complex meaningful representations that \n        can be learned with ConvNets and use them as variables in simple and interesting algebra operations.\n        If we "subtract" the representation of the horizon with trees from the representation of just trees ..\n        is the resulting representation most similar to that of plain horizon? Well, lets find out.',a}return Object(d.a)(t,e),Object(i.a)(t,[{key:"componentDidMount",value:function(){document.title="ConvNet Playground | Image Algebra"}},{key:"clickDatasetImage",value:function(){alert("click here")}},{key:"render",value:function(){return n.a.createElement("div",null,n.a.createElement("div",{className:"pb10 sectiontitle"}," Image Algebra"),n.a.createElement("div",{className:"horrule"}),n.a.createElement(D.a,{title:"Image Algebra",kind:"info",subtitle:this.algebraIntro,style:{minWidth:"100%",marginBottom:".5rem"}}))}}]),t}(l.Component)),M=function(e){function t(e){var a;return Object(r.a)(this,t),(a=Object(c.a)(this,Object(m.a)(t).call(this,e))).state={},a}return Object(d.a)(t,e),Object(i.a)(t,[{key:"componentDidMount",value:function(){}},{key:"toggleOrientationModal",value:function(e){this.setState({showorientationmodal:!this.state.showorientationmodal})}},{key:"render",value:function(){var e=this;return n.a.createElement(u.a,null,n.a.createElement(E,null),this.state.showorientationmodal&&n.a.createElement(v.a,{className:"orientationmodal",open:!0,size:"lg",passiveModal:!1,primaryButtonText:"Get Started",modalHeading:"Convnet Playground",modalLabel:"Welcome!",onRequestSubmit:this.toggleOrientationModal.bind(this),ref:function(t){return e.orientationModal=t},onRequestClose:this.toggleOrientationModal.bind(this)},n.a.createElement(b,null)),n.a.createElement("div",{className:"container-fluid p10"},n.a.createElement(h.a,{exact:!0,path:"/",component:L}),n.a.createElement(h.a,{exact:!0,path:"/datasets",component:L}),n.a.createElement(h.a,{exact:!0,path:"/models",component:S}),n.a.createElement(h.a,{exact:!0,path:"/algebra",component:j})),n.a.createElement("div",{id:"footer"}," ",n.a.createElement(x,null)," "))}}]),t}(l.Component),O=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function I(e,t){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var a=e.installing;null!=a&&(a.onstatechange=function(){"installed"===a.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA."),t&&t.onUpdate&&t.onUpdate(e)):(console.log("Content is cached for offline use."),t&&t.onSuccess&&t.onSuccess(e)))})}}).catch(function(e){console.error("Error during service worker registration:",e)})}a(99);o.a.render(n.a.createElement(M,null),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/convnetplayground",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",function(){var t="".concat("/convnetplayground","/service-worker.js");O?(function(e,t){fetch(e).then(function(a){var l=a.headers.get("content-type");404===a.status||null!=l&&-1===l.indexOf("javascript")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):I(e,t)}).catch(function(){console.log("No internet connection found. App is running in offline mode.")})}(t,e),navigator.serviceWorker.ready.then(function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA")})):I(t,e)})}}()},26:function(e,t,a){e.exports=a.p+"static/media/layer.9952a8d0.png"},39:function(e,t,a){e.exports=a.p+"static/media/model.20a139c6.png"},49:function(e,t,a){e.exports=a(100)},54:function(e,t,a){},55:function(e,t,a){},88:function(e,t,a){},89:function(e){e.exports={models:[{name:"vgg16",layers:[{name:"block1_conv1",type:"Conv2D",parametercount:1792,layer_index:1,totallayers:19},{name:"block1_pool",type:"MaxPooling2D",parametercount:0,layer_index:3,totallayers:19},{name:"block3_conv1",type:"Conv2D",parametercount:295168,layer_index:7,totallayers:19},{name:"block3_pool",type:"MaxPooling2D",parametercount:0,layer_index:10,totallayers:19},{name:"block4_conv1",type:"Conv2D",parametercount:1180160,layer_index:11,totallayers:19},{name:"block4_pool",type:"MaxPooling2D",parametercount:0,layer_index:14,totallayers:19},{name:"block5_conv1",type:"Conv2D",parametercount:2359808,layer_index:15,totallayers:19},{name:"block5_pool",type:"MaxPooling2D",parametercount:0,layer_index:18,totallayers:19}]},{name:"resnet50",layers:[{name:"res2a_branch2a",type:"Conv2D",parametercount:4160,layer_index:5,totallayers:174},{name:"res2b_branch2a",type:"Conv2D",parametercount:16448,layer_index:17,totallayers:174},{name:"res3b_branch2a",type:"Conv2D",parametercount:65664,layer_index:49,totallayers:174},{name:"res4a_branch2a",type:"Conv2D",parametercount:131328,layer_index:79,totallayers:174},{name:"res4e_branch2a",type:"Conv2D",parametercount:262400,layer_index:121,totallayers:174},{name:"res4c_branch2a",type:"Conv2D",parametercount:262400,layer_index:101,totallayers:174},{name:"res5a_branch2a",type:"Conv2D",parametercount:524800,layer_index:141,totallayers:174},{name:"res5c_branch2c",type:"Conv2D",parametercount:1050624,layer_index:169,totallayers:174}]}],datasets:[{name:"tinyimagenet",icon:"imagenet.jpg"},{name:"cifar10",icon:"cifar.jpg"}],metrics:["cosine","hamming","euclidean","jaccard","minkowski"]}},90:function(e){e.exports={0:[["0","1.0"],["2","0.547"],["8","0.505"],["1","0.435"],["9","0.4"],["3","0.374"],["7","0.37"],["5","0.343"],["6","0.329"],["4","0.316"]],1:[["1","1.0"],["7","0.759"],["9","0.695"],["2","0.639"],["3","0.563"],["5","0.446"],["0","0.435"],["8","0.416"],["6","0.203"],["4","0.111"]],2:[["2","1.0"],["1","0.639"],["7","0.624"],["8","0.557"],["0","0.547"],["9","0.546"],["3","0.446"],["5","0.434"],["4","0.252"],["6","0.173"]],3:[["3","1.0"],["7","0.568"],["1","0.563"],["9","0.523"],["2","0.446"],["8","0.394"],["0","0.374"],["6","0.316"],["5","0.288"],["4","0.209"]],4:[["4","1.0"],["6","0.394"],["8","0.317"],["0","0.316"],["5","0.283"],["2","0.252"],["3","0.209"],["7","0.199"],["9","0.144"],["1","0.111"]],5:[["5","1.0"],["7","0.514"],["1","0.446"],["2","0.434"],["9","0.409"],["0","0.343"],["8","0.305"],["6","0.302"],["3","0.288"],["4","0.283"]],6:[["6","1.0"],["4","0.394"],["0","0.329"],["3","0.316"],["5","0.302"],["8","0.301"],["7","0.269"],["9","0.22"],["1","0.203"],["2","0.173"]],7:[["7","1.0"],["1","0.759"],["9","0.683"],["2","0.624"],["3","0.568"],["8","0.533"],["5","0.514"],["0","0.37"],["6","0.269"],["4","0.199"]],8:[["8","1.0"],["2","0.557"],["7","0.533"],["0","0.505"],["1","0.416"],["3","0.394"],["9","0.357"],["4","0.317"],["5","0.305"],["6","0.301"]],9:[["9","1.0"],["1","0.695"],["7","0.683"],["2","0.546"],["3","0.523"],["5","0.409"],["0","0.4"],["8","0.357"],["6","0.22"],["4","0.144"]]}},95:function(e,t,a){},96:function(e){e.exports={vgg16:{block1_conv1:["0","1","2","4","6","8","10","12","14","16","18","20","22","24","26","28","30","32","34","36","38","40","42","44","46","48","50","52","54","56","58","60","62"],block1_conv2:["0","2","4","6","8","10","12","14","16","18","20","22","24","26","28","30","32","34","36","38","40","42","44","46","48","50","52","54","56","58","60","62"],block2_conv1:["0","4","8","12","16","20","24","28","32","36","40","44","48","52","56","60","64","68","72","76","80","84","88","92","96","100","104","108","112","116","120","124"],block2_conv2:["0","4","8","12","16","20","24","28","32","36","40","44","48","52","56","60","64","68","72","76","80","84","88","92","96","100","104","108","112","116","120","124"],block3_conv1:["0","8","16","24","32","40","48","56","64","72","80","88","96","104","112","120","128","136","144","152","160","168","176","184","192","200","208","216","224","232","240","248"],block3_conv2:["0","8","16","24","32","40","48","56","64","72","80","88","96","104","112","120","128","136","144","152","160","168","176","184","192","200","208","216","224","232","240","248"],block3_conv3:["0","2","8","16","24","32","40","48","56","64","72","80","88","96","104","112","120","128","136","144","152","160","168","176","184","192","200","208","216","224","232","240","248"],block4_conv1:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block4_conv2:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block4_conv3:["0","2","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block5_conv1:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block5_conv2:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block5_conv3:["0","1","2","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"]},vgg19:{block1_conv1:["0","2","4","6","8","10","12","14","16","18","20","22","24","26","28","30","32","34","36","38","40","42","44","46","48","50","52","54","56","58","60","62"],block1_conv2:["0","2","4","6","8","10","12","14","16","18","20","22","24","26","28","30","32","34","36","38","40","42","44","46","48","50","52","54","56","58","60","62"],block2_conv1:["0","4","8","12","16","20","24","28","32","36","40","44","48","52","56","60","64","68","72","76","80","84","88","92","96","100","104","108","112","116","120","124"],block2_conv2:["0","4","8","12","16","20","24","28","32","36","40","44","48","52","56","60","64","68","72","76","80","84","88","92","96","100","104","108","112","116","120","124"],block3_conv1:["0","8","16","24","32","40","48","56","64","72","80","88","96","104","112","120","128","136","144","152","160","168","176","184","192","200","208","216","224","232","240","248"],block3_conv2:["0","8","16","24","32","40","48","56","64","72","80","88","96","104","112","120","128","136","144","152","160","168","176","184","192","200","208","216","224","232","240","248"],block3_conv3:["0","8","16","24","32","40","48","56","64","72","80","88","96","104","112","120","128","136","144","152","160","168","176","184","192","200","208","216","224","232","240","248"],block3_conv4:["0","8","16","24","32","40","48","56","64","72","80","88","96","104","112","120","128","136","144","152","160","168","176","184","192","200","208","216","224","232","240","248"],block4_conv1:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block4_conv2:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block4_conv3:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block4_conv4:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block5_conv1:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block5_conv2:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block5_conv3:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"],block5_conv4:["0","17","34","51","68","85","102","119","136","153","170","187","204","221","238","255","272","289","306","323","340","357","374","391","408","425","442","459","476","493","510"]}}},97:function(e){e.exports={models:[{name:"vgg16",layers:[{name:"block1_conv1",type:"Conv2D",parametercount:1792,layer_index:1,totallayers:19,numneurons:64},{name:"block1_conv2",type:"Conv2D",parametercount:36928,layer_index:2,totallayers:19,numneurons:64},{name:"block2_conv1",type:"Conv2D",parametercount:73856,layer_index:4,totallayers:19,numneurons:128},{name:"block2_conv2",type:"Conv2D",parametercount:147584,layer_index:5,totallayers:19,numneurons:128},{name:"block3_conv1",type:"Conv2D",parametercount:295168,layer_index:7,totallayers:19,numneurons:256},{name:"block3_conv2",type:"Conv2D",parametercount:590080,layer_index:8,totallayers:19,numneurons:256},{name:"block3_conv3",type:"Conv2D",parametercount:590080,layer_index:9,totallayers:19,numneurons:256},{name:"block4_conv1",type:"Conv2D",parametercount:1180160,layer_index:11,totallayers:19,numneurons:512},{name:"block4_conv2",type:"Conv2D",parametercount:2359808,layer_index:12,totallayers:19,numneurons:512},{name:"block4_conv3",type:"Conv2D",parametercount:2359808,layer_index:13,totallayers:19,numneurons:512},{name:"block5_conv1",type:"Conv2D",parametercount:2359808,layer_index:15,totallayers:19,numneurons:512},{name:"block5_conv2",type:"Conv2D",parametercount:2359808,layer_index:16,totallayers:19,numneurons:512},{name:"block5_conv3",type:"Conv2D",parametercount:2359808,layer_index:17,totallayers:19,numneurons:512}]},{name:"vgg19",layers:[{name:"block1_conv1",type:"Conv2D",parametercount:1792,layer_index:1,totallayers:22,numneurons:64},{name:"block1_conv2",type:"Conv2D",parametercount:36928,layer_index:2,totallayers:22,numneurons:64},{name:"block2_conv1",type:"Conv2D",parametercount:73856,layer_index:4,totallayers:22,numneurons:128},{name:"block2_conv2",type:"Conv2D",parametercount:147584,layer_index:5,totallayers:22,numneurons:128},{name:"block3_conv1",type:"Conv2D",parametercount:295168,layer_index:7,totallayers:22,numneurons:256},{name:"block3_conv2",type:"Conv2D",parametercount:590080,layer_index:8,totallayers:22,numneurons:256},{name:"block3_conv3",type:"Conv2D",parametercount:590080,layer_index:9,totallayers:22,numneurons:256},{name:"block3_conv4",type:"Conv2D",parametercount:590080,layer_index:10,totallayers:22,numneurons:256},{name:"block4_conv1",type:"Conv2D",parametercount:1180160,layer_index:12,totallayers:22,numneurons:512},{name:"block4_conv2",type:"Conv2D",parametercount:2359808,layer_index:13,totallayers:22,numneurons:512},{name:"block4_conv3",type:"Conv2D",parametercount:2359808,layer_index:14,totallayers:22,numneurons:512},{name:"block4_conv4",type:"Conv2D",parametercount:2359808,layer_index:15,totallayers:22,numneurons:512},{name:"block5_conv1",type:"Conv2D",parametercount:2359808,layer_index:17,totallayers:22,numneurons:512},{name:"block5_conv2",type:"Conv2D",parametercount:2359808,layer_index:18,totallayers:22,numneurons:512},{name:"block5_conv3",type:"Conv2D",parametercount:2359808,layer_index:19,totallayers:22,numneurons:512},{name:"block5_conv4",type:"Conv2D",parametercount:2359808,layer_index:20,totallayers:22,numneurons:512}]}]}},98:function(e,t,a){},99:function(e,t,a){}},[[49,1,2]]]);
//# sourceMappingURL=main.50894009.chunk.js.map